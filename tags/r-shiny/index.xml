<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Shiny on Teddy&#39;s online desktop</title>
    <link>https://www.codelooper.com/tags/r-shiny/</link>
    <description>Recent content in R Shiny on Teddy&#39;s online desktop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 22 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.codelooper.com/tags/r-shiny/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ChatGPT Shiny R app</title>
      <link>https://www.codelooper.com/post/2023-12-22-chatgpt-code-in-python-in-r-markdown/</link>
      <pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://www.codelooper.com/post/2023-12-22-chatgpt-code-in-python-in-r-markdown/</guid>
      <description>This is a simple integration of ChatGPT into shiny R. At first I wanted to do this in Python but it was easier to do a web app in R Shiny. I used code from this site to get started:&#xA;https://www.listendata.com/2023/05/chatgpt-in-r.html#steps_to_run_chatgpt_in_r&#xA;The app is hosted at: https://twong.shinyapps.io/chat_bot/&#xA;The R code for this shiny app is below.&#xA;library(shiny) library(httr) ui &amp;lt;- fluidPage( titlePanel(&amp;quot;ChatGPT Shiny App&amp;quot;), textInput(&amp;quot;user_input&amp;quot;, &amp;quot;Enter your message:&amp;quot;), actionButton(&amp;quot;submit_btn&amp;quot;, &amp;quot;Submit&amp;quot;), p(&amp;quot;&amp;quot;), textOutput(&amp;quot;chat_output&amp;quot;), p(&amp;quot;&amp;quot;), p(&amp;quot;Code for this page is at https://codelooper.</description>
    </item>
    <item>
      <title>Distribution fitting</title>
      <link>https://www.codelooper.com/post/distribution-fitting-r-shiny/</link>
      <pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://www.codelooper.com/post/distribution-fitting-r-shiny/</guid>
      <description>This page is made using code from: https://github.com/semanzi/fitting_distributions_with_R_NHSR_2021/tree/main&#xA;The app is hosted at: https://twong.shinyapps.io/HSMA_distr_tool/</description>
    </item>
    <item>
      <title>Running Shiny R within blogdown</title>
      <link>https://www.codelooper.com/post/running-shiny-within-blogdown/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://www.codelooper.com/post/running-shiny-within-blogdown/</guid>
      <description>I just learned that I could embed the R Shiny app into blogdown from this post. So hereâ€™s an attempt at that.</description>
    </item>
    <item>
      <title>Cat XL pricing using rate on line (ROL) curves</title>
      <link>https://www.codelooper.com/post/cat-xl-pricing-using-rate-on-line-curves/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://www.codelooper.com/post/cat-xl-pricing-using-rate-on-line-curves/</guid>
      <description>When I was working with stop loss reinsurance contracts the usual way to perform the pricing exercise would be to gather all the loss data, fit a loss distribution to that data, make adjustments based on seasonal outlook or other variables, and apply the limits and retentions asked by the clients/brokers.&#xA;Although this is standard practice and almost second nature, another way to look at the pricing problem is from the point of view that you, as an underwriter, do not have all the information and perhaps should take into consideration market pricing.</description>
    </item>
  </channel>
</rss>
