<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Teddy&#39;s online desktop</title>
    <link>https://www.codelooper.com/post/</link>
    <description>Recent content in Posts on Teddy&#39;s online desktop</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.codelooper.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coursera - introduction to tensorflow</title>
      <link>https://www.codelooper.com/post/2022-08-03-coursera-introduction-to-tensorflow/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-08-03-coursera-introduction-to-tensorflow/</guid>
      <description>Week 1 Assignment: Housing Prices In this exercise you’ll try to build a neural network that predicts the price of a house according to a simple formula.
Imagine that house pricing is as easy as:
A house has a base cost of 50k, and every additional bedroom adds a cost of 50k. This will make a 1 bedroom house cost 100k, a 2 bedroom house cost 150k etc.
How would you create a neural network that learns this relationship so that it would predict a 7 bedroom house as costing close to 400k etc.</description>
    </item>
    
    <item>
      <title>Python - Handling Exceptions</title>
      <link>https://www.codelooper.com/post/2022-08-03-python-handling-exceptions/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-08-03-python-handling-exceptions/</guid>
      <description>From: LinkedIn course ‘Python Essential Training’ by Ryan Mitchell https://www.linkedin.com/learning/python-essential-training-14898805
Try, except, finally
import time as time def causeError(): start = time.time() #set start timer try: #delay run by 0.5 secs time.sleep(0.5) return 1/0 except Exception: print(&amp;#39;There was some sort of error!&amp;#39;) finally: print(f&amp;#39;Function took {time.time() - start} seconds to execute&amp;#39;) causeError() ## There was some sort of error! ## Function took 0.5048558712005615 seconds to execute Custom Decorators *args **kwargs are multiple arguments or string arguments.</description>
    </item>
    
    <item>
      <title>Python - Multithreading/Multiprocessing</title>
      <link>https://www.codelooper.com/post/2022-08-03-python-multithreading-multiprocessing/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-08-03-python-multithreading-multiprocessing/</guid>
      <description>From: LinkedIn course ‘Python Essential Training’ by Ryan Mitchell https://www.linkedin.com/learning/python-essential-training-14898805
import threading import time Threads
def longSquare(num): time.sleep(1) return num**2 [longSquare(n) for n in range(0, 5)] ## [0, 1, 4, 9, 16] t1 = threading.Thread(target=longSquare, args=(1,)) #args is tuple t2 = threading.Thread(target=longSquare, args=(2,)) t1.start() t2.start() t1.join() t2.join() def longSquare(num, results): time.sleep(1) results[num] = num**2 results = {} t1 = threading.Thread(target=longSquare, args=(1, results)) #args are tuples t2 = threading.Thread(target=longSquare, args=(2, results)) t1.</description>
    </item>
    
    <item>
      <title>Python - opening reading writing files</title>
      <link>https://www.codelooper.com/post/2022-08-03-python-opening-reading-writing-files/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-08-03-python-opening-reading-writing-files/</guid>
      <description>From: LinkedIn course ‘Python Essential Training’ by Ryan Mitchell https://www.linkedin.com/learning/python-essential-training-14898805
reading files
f = open(&amp;#39;some_file.txt&amp;#39;,&amp;#39;r&amp;#39;) print(f) #gets file type, need to read the file f.readline() f.readlines() #puts lines into list of strings for line in f.readlines(): print(line.strip()) # strips leading and trailing spaces writing files
f = open(&amp;#39;somefiles.txt&amp;#39;,&amp;#39;w&amp;#39;) # creates a file f.write(&amp;#39;Line 1\n&amp;#39;) f.write(&amp;#39;Line 2\n&amp;#39;) f.close() # python doesn&amp;#39;t write until you close or run out of buffer and will overwrite existing text appending files</description>
    </item>
    
    <item>
      <title>Codecademy Pandas Continued...</title>
      <link>https://www.codelooper.com/post/2022-08-02-codecademy-pandas-continued/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-08-02-codecademy-pandas-continued/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Codecademy - Pandas Lesson</title>
      <link>https://www.codelooper.com/post/2022-07-28-codecademy-pandas-lesson/</link>
      <pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-07-28-codecademy-pandas-lesson/</guid>
      <description>You’re getting ready to staff the clinic for March this year. You want to know how many visits took place in March last year, to help you prepare.
Write a command that will produce a Series made up of the March data from df from all four clinic sites and save it to the variable march.
#import /;../,codecademylib3 import pandas as pd df = pd.DataFrame([ [&amp;#39;January&amp;#39;, 100, 100, 23, 100], [&amp;#39;February&amp;#39;, 51, 45, 145, 45], [&amp;#39;March&amp;#39;, 81, 96, 65, 96], [&amp;#39;April&amp;#39;, 80, 80, 54, 180], [&amp;#39;May&amp;#39;, 51, 54, 54, 154], [&amp;#39;June&amp;#39;, 112, 109, 79, 129]], columns=[&amp;#39;month&amp;#39;, &amp;#39;clinic_east&amp;#39;, &amp;#39;clinic_north&amp;#39;, &amp;#39;clinic_south&amp;#39;, &amp;#39;clinic_west&amp;#39;]) print(df) ## month clinic_east clinic_north clinic_south clinic_west ## 0 January 100 100 23 100 ## 1 February 51 45 145 45 ## 2 March 81 96 65 96 ## 3 April 80 80 54 180 ## 4 May 51 54 54 154 ## 5 June 112 109 79 129 # integer location within dataframe # locations are zero indexed and doesn&amp;#39;t include the ending integer march = df.</description>
    </item>
    
    <item>
      <title>Macbook air m1 power consumption</title>
      <link>https://www.codelooper.com/post/macbook-m1-power-consumption/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/macbook-m1-power-consumption/</guid>
      <description>I found that rsessions-arm64 was running the cpu at 100% and using almost 7 watts (it’s around 20 mW when idle), and ran my laptop battery down very quickly. A restart seem to have solved the problem.
Using command “sudo powermetrics” in terminal opens up the powermetrics program that’s included in osx and provides data on power usage as shown in the following screenshot:
powermetrics</description>
    </item>
    
    <item>
      <title>Datacamp&#39;s tidyverse course using gapminder dataset</title>
      <link>https://www.codelooper.com/post/2022-07-19-datacamp-s-tidyverse-course-using-gapminder-dataset/</link>
      <pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-07-19-datacamp-s-tidyverse-course-using-gapminder-dataset/</guid>
      <description>Datacamp’s Tidyverse course using Gapminder dataset
library(gapminder) library(dplyr) ## ## Attaching package: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union head(gapminder) ## # A tibble: 6 × 6 ## country continent year lifeExp pop gdpPercap ## &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; ## 1 Afghanistan Asia 1952 28.8 8425333 779. ## 2 Afghanistan Asia 1957 30.</description>
    </item>
    
    <item>
      <title>Global size of agriculture insurance market in 2020 and beyond</title>
      <link>https://www.codelooper.com/post/global-size-of-agriculture-insurance-market-in-2020-and-beyond/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/global-size-of-agriculture-insurance-market-in-2020-and-beyond/</guid>
      <description>People often ask me how large is the world wide agriculture insurance market. U.S., Canada, China, and India have large government subsidized programs and provide reports on premiums. However, the reports do not contain privately sold products and premiums. These are mostly hail and top-up programs that complement the government subsidized crop and livestock insurance programs.
Roman Shynkarenko provided the post below on Linkedin for the agriculture insurance market in 2020 according to Allianz (32bn world wide in 2020).</description>
    </item>
    
    <item>
      <title>Google Data Analytics Certificate</title>
      <link>https://www.codelooper.com/post/google-data-analytics-certificate/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/google-data-analytics-certificate/</guid>
      <description>I&amp;rsquo;ve finally completed the Coursera Google Data Analytics Certificate.
I think the course is great for beginners in data analytics. For me it was a great refresher on SQL and R but the other sections were not all that useful. The course did motivate me to learn R (again) and this blog site is probably a result of that.
I think the course could use more on statistical thinking and spending more time on probability since data analysts could really use that in their work.</description>
    </item>
    
    <item>
      <title>Ideas from programming</title>
      <link>https://www.codelooper.com/post/ideas-from-programming/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/ideas-from-programming/</guid>
      <description> Version Control and GitHub + Main/Branches, Push/Pull/Merge Functions/Modules Methods should be deep. Write the interface first Try to minimize exceptions define them away Be strategic + Invest in building the future/don&amp;rsquo;t introduce bad code today Write the unit test before the useful code Make sure you do input validation </description>
    </item>
    
    <item>
      <title>Running Shiny R within blogdown</title>
      <link>https://www.codelooper.com/post/running-shiny-within-blogdown/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/running-shiny-within-blogdown/</guid>
      <description>I just learned that I could embed the R Shiny app into blogdown from this post. So here’s an attempt at that.</description>
    </item>
    
    <item>
      <title>Cat XL pricing using rate on line (ROL) curves</title>
      <link>https://www.codelooper.com/post/cat-xl-pricing-using-rate-on-line-curves/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/cat-xl-pricing-using-rate-on-line-curves/</guid>
      <description>When I was working with stop loss reinsurance contracts the usual way to perform the pricing exercise would be to gather all the loss data, fit a loss distribution to that data, make adjustments based on seasonal outlook or other variables, and apply the limits and retentions asked by the clients/brokers.
Although this is standard practice and almost second nature, another way to look at the pricing problem is from the point of view that you, as an underwriter, do not have all the information and perhaps should take into consideration market pricing.</description>
    </item>
    
    <item>
      <title>Quarto</title>
      <link>https://www.codelooper.com/post/2022-07-15-quarto/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-07-15-quarto/</guid>
      <description>Checking out Quarto today. It looks like a more comprehensive tool than R Markdown though it does a lot of similar things like being able to write text and include code cells (like Jupyter), but then also able to render the output into many formats (pdf, html, word, etc) using Pandoc. I guess that makes sense since it’s published by the same folks behind R Markdown and R Studio:</description>
    </item>
    
    <item>
      <title>R blogdown/pagedown and Github</title>
      <link>https://www.codelooper.com/post/2022-07-14-blogdown-github/2022-07-14-blogdown-github/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-07-14-blogdown-github/2022-07-14-blogdown-github/</guid>
      <description>It’s taken all day to get blogdown to sync with Github. I already had a repo set up at https://tedtwong.github.io/ and I had set up a blogdown folder in R Studio, let’s call it: R/blogdown.
I wasn’t too familiar with how to set up git to sync the R/blogdown/public folder with https://tedtwong.github.io/ repo so that I can version control blogdown files and host the files on Github at the same time.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://www.codelooper.com/post/2020-12-01-r-rmarkdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      
      <guid>https://www.codelooper.com/post/2020-12-01-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Math Sample</title>
      <link>https://www.codelooper.com/post/2017-03-05-math-sample/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2017-03-05-math-sample/</guid>
      <description>&lt;p&gt;KaTeX can be used to generate complex math formulas server-side.&lt;/p&gt;
&lt;p&gt;$$
\phi = \frac{(1+\sqrt{5})}{2} = 1.6180339887\cdots
$$&lt;/p&gt;
&lt;p&gt;$$
e^{i\pi} = -1
$$&lt;/p&gt;
&lt;p&gt;Additional details can be found on
&lt;a href=&#34;https://github.com/Khan/KaTeX&#34;&gt;GitHub&lt;/a&gt; or on the
&lt;a href=&#34;http://tiddlywiki.com/plugins/tiddlywiki/katex/&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
