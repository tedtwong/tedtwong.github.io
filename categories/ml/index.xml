<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ML on Teddy&#39;s online desktop</title>
    <link>https://www.codelooper.com/categories/ml/</link>
    <description>Recent content in ML on Teddy&#39;s online desktop</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 12 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.codelooper.com/categories/ml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ChatGPT python code for distribution fitting</title>
      <link>https://www.codelooper.com/post/2023-12-12-chatgpt-python-code-for-distribution-fitting/</link>
      <pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2023-12-12-chatgpt-python-code-for-distribution-fitting/</guid>
      <description>import numpy as np import scipy.stats as stats import matplotlib.pyplot as plt from scipy.stats import norm, expon, lognorm, weibull_min, gamma, beta, gumbel_r # Your data data = np.array([0.1026, 0.284, 0.0259, 0.0364, 0.0401, 0.0297, 0.1035, 0.0533, 0.0742, 0.0246, 0.089, 0.1215, 0.1729, 0.0212, 0.0273, 0.065, 0.0853, 0.0399, 0.1926, 0.1238, 0.4324, 0.1324, 0.0486, 0.0411, 0.0414, 0.0329, 0.02, 0.0749, 0.0688, 0.1432, 0.1769, 0.0415, 0.0939, 0.2315, 0.4017, 0.0751, 0.0669, 0.242, 0.1931, 0.0839, 0.0601, 0.0794, 0.</description>
    </item>
    
    <item>
      <title>Coursera - introduction to tensorflow</title>
      <link>https://www.codelooper.com/post/2022-08-03-coursera-introduction-to-tensorflow/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.codelooper.com/post/2022-08-03-coursera-introduction-to-tensorflow/</guid>
      <description>Week 1 Assignment: Housing Prices In this exercise youâ€™ll try to build a neural network that predicts the price of a house according to a simple formula.
Imagine that house pricing is as easy as:
A house has a base cost of 50k, and every additional bedroom adds a cost of 50k. This will make a 1 bedroom house cost 100k, a 2 bedroom house cost 150k etc.
How would you create a neural network that learns this relationship so that it would predict a 7 bedroom house as costing close to 400k etc.</description>
    </item>
    
  </channel>
</rss>
